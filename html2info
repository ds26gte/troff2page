# last modified 2016-02-17
# Dorai Sitaram

debugmode=false

mainhtmlfile=$1

check_input_validity() {
  if ! $(grep -q "^Generated from .* by t\(roff\|ex\)2page, v\.\? [0-9c]\+$" $1)
  then echo Sorry, $1 was not generated by troff2page or tex2page
    exit 1
  fi
}

check_input_validity $mainhtmlfile

fbase=${mainhtmlfile%.html}

infofile=$fbase.info

# if debugmode=false, single temp file in /tmp is used and cleaned up at end;
# else separate temp file is created for each html file, in working directory, and not cleaned up

if ! $debugmode
then tmpfile=$(mktemp --tmpdir html2info_XXXXXXXXXX.html)
fi

i=0

while true
do
  if test $i -eq 0
  then ifile=$fbase.html
    rm -f $infofile
  else ifile=$fbase-Z-H-$i.html
  fi

  if test ! -f $ifile
  then break
  fi

  check_input_validity $ifile

  if $debugmode
  then tmpfile=TEMP_$ifile
  fi

  cp $ifile $tmpfile

  mod="sed -i $tmpfile -e "

  # use an unabbrev for literal Þ as we'll be using Þ for intermediate tokens
  $mod 's/Þ/&!/g'

  # delete navigation lines
  $mod '/^<div\s\+\S\+\s\+class=navigation.\+<\/div>/d'

  # mark beginning and end of ToC
  $mod 's/^<a\s\+name="TAG:__t\(roff\|tex\)2page_toc">/<!-- ÞINFO_MENU_BEGIN! -->ÞINFO_MENU_BEGIN!* Menu:<br>/'

  $mod 's/^<a\s\+name="TAG:__t\(roff\|tex\)2page_toc_end">/<!-- ÞINFO_MENU_END! -->ÞINFO_MENU_END!/'

  # create Info menu entry for all doc-internal links within ToC
  $mod '/^<!--\s\+ÞINFO_MENU_BEGIN!\s\+-->/,/^<!--\s\+ÞINFO_MENU_END!\s\+-->/ s/<a\s\+class=hrefinternal\s\+href="'$fbase'\.html#[^"]*">/* 0:: /g'

  $mod '/^<!--\s\+ÞINFO_MENU_BEGIN!\s\+-->/,/^<!--\s\+ÞINFO_MENU_END!\s\+-->/ s/<a\s\+class=hrefinternal\s\+href="'$fbase'-Z-H-\([0-9]\+\)\.html#[^"]*">/* \1:: /g'

  $mod '/^<!--\s\+ÞINFO_MENU_BEGIN!\s\+-->/,/^<!--\s\+ÞINFO_MENU_END!\s\+-->/ s/<a\s\+class=hrefinternal\s\+href="#[^"]*>"/* '$i':: /g'

  # disable all other page-internal links

  $mod 's/<a\s\+class=hrefinternal\s\+href="#[^"]\+">//g'

  # mark all doc-internal links in the index (if any)

  $mod 's/<a\s\+class=hrefinternal\s\+href="'$fbase'\.html#TAG:__t\(roff\|ex\)2page_index_[^"]\+">/ÞI!0::/g'

  $mod 's/<a\s\+class=hrefinternal\s\+href="'$fbase'-Z-H-\([0-9]\+\)\.html#TAG:__t\(roff\|ex\)2page_index_[^"]\+">/ÞI!\1::/g'

  $mod 's/<a\s\+class=hrefinternal\s\+href="#TAG:__t\(roff\|ex\)2page_index_[^"]\+">/ÞI!'$i'::/g'

  # all other doc-internal links become Info *note's

  $mod 's/<a\s\+class=hrefinternal\s\+href="'$fbase'\.html.[^"]*">/ÞN!0::/g'

  $mod 's/<a\s\+class=hrefinternal\s\+href="'$fbase'-Z-H-\([0-9]\+\)\.html.[^"]*">/ÞN!\1::/g'

  # disable all doc-external links
  $mod 's/<a\s\+href="[^=]\+">//g'

  # delete all anchors
  $mod 's/<a\s\+name="[^"]\+">//g'

  # </a> are all orphans now -- delete
  $mod 's/<\/a>//g'

  infotitleline="File: $infofile"

  # fbase.html becomes Info node 0 with Node=Top
  # fbase-Z-H-i.html becomes Info node i with Node=i
  if test $i -eq 0
  then infotitleline="$infotitleline,  Node: Top"
  else infotitleline="$infotitleline,  Node: $i"
  fi

  # Info node 0 gets no Prev
  # Info node 1 gets Prev=Top
  # Info node i>1 gets Prev=(i - 1)
  if test $i -eq 1
  then infotitleline="$infotitleline,  Prev: Top"
  elif test $i -gt 1
  then infotitleline="$infotitleline,  Prev: $(expr $i - 1)"
  fi

  # if Info Node i+1 exists, then
  # Info node i gets Next=(i + 1)

  if test -f $fbase-Z-H-$(expr $i + 1).html
  then infotitleline="$infotitleline,  Next: $(expr $i + 1)"
  fi

  # all Info nodes get Up=Top
  infotitleline="$infotitleline,  Up: Top"

  echo '' >> $infofile
  echo $infotitleline >> $infofile

  lynx -dump -nolist $tmpfile >> $infofile

  if ! $debugmode
  then rm $tmpfile
  fi

  i=$(expr $i + 1)
done

mod="sed -i $infofile -e "

# flushleft menu entries
$mod '/^\s*ÞINFO_MENU_BEGIN!/,/^\s*ÞINFO_MENU_END!/ s/^\(\s*\)\(\*\s\+[^:]\+::\)/\2\1/'

# delete menu markers
$mod 's/^\s*ÞINFO_MENU_\(BEGIN\|END\)!//'

# expand doc-internal notes (not index)
$mod 's/ÞN!\([0-9]\+::\)/*note \1/g'

# expand doc-internal notes in index
$mod 's/ÞI!\([0-9]\+\)::\1/*note \1::/g'

# restore Þ
$mod 's/Þ!/Þ/g'

# vi:ft=sh
