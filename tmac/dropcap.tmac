.\" from www.tmac
.
.if d := .nx 
.
.if !\n[.troff2page] \{\
.de :=
.  in 0
.  if !d dropcap-color .ds dropcap-color black\"
.  ie n \
.    nop \\$1\c
.  el \{\
.    nr dummy \w'\\$1'u
.    nr dcht ((\\n[.v] + \\n[rst]) * \\n[.ps] / \\n[rst])
.    char \[dcap] \m[\\*[dropcap-color]]\s'\\n[dcht]u'\\$1
.    nop \v'\\n[.v]u'\\[dcap]\v'-\\n[.v]u'\c
'        ti \w'\\[dcap]'u
.  \}
.  shift
.  nop \\$*
..
.\}
.
.ig ##
(defrequest ":="
  (lambda ()
    (let* ((args (read-args))
           (big-letter (car args))
           (color (cond ((setq *it* (gethash "dropcap-color" *string-table*))
                         (funcall *it*))
                        (t "black"))))
      (format t "big-letter = ~a; color = ~a~%" big-letter color)
      (emit (switch-glyph-color color))
      (emit-verbatim "<span class=dropcap>")
      (emit big-letter)
      (emit-verbatim "</span>")
      (emit (switch-glyph-color ""))
      (emit-newline)
      )))
.##
