.\" last change 2016-02-16
.
.if !\n[.troff2page] .nx
.
.nr index:location 0
.
.de IX
.index:set_up_index
.nr index:location +1
.TAG index_\\n[index:location]
.write index:idx_stream \\\\indexentry{\\$*|index:function}{\\n[index:location]}
..
.
.am index:set_up_index
.ig ##
(let ((f (concatenate 'string (funcall (gethash "AUXF" *string-table*)) ".ind")))
  (unless (probe-file f)
    (with-open-file (o f :direction :output)
      (format o ".TAG troff2page_index~%")
      (format o ".pca-t2p-ix::cant-open-ind-file~%"))))
.##
..
.
.de pca-t2p-ix::cant-open-ind-file
.ig ##
(flag-missing-piece :index)
(let ((f (concatenate 'string (funcall (gethash "AUXF" *string-table*)) ".ind")))
  (flag-missing-piece f)
  (setq *file-postlude*
    (lambda ()
      (delete-file f)
      (twarning "can't open `~a': No such file or directory" f))))
.##
..
.
.am index:item0
.ig ##
(clrhash *index-pageno-mention-table*)
.##
..
.
.am index:item1
.ig ##
(clrhash *index-pageno-mention-table*)
.##
..
.
.am index:item2
.ig ##
(clrhash *index-pageno-mention-table*)
.##
..
.
.de index:hook
.ig ##
(when (and (> *last-page-number* 0)
           (not (gethash "TAG_troff2page_index" *node-table*)))
  (flag-missing-piece :index-in-nav-bar))
.##
.TAG troff2page_index
..
.
.ig ##
(defvar *index-pageno-mention-table* (make-hash-table))

(defstring "index:function"
  (lambda (ixno)
    (let* ((ix-tag (concatenate 'string "TAG_index_" ixno))
           (ix-pageno (gethash ix-tag *node-table*)))
      (concatenate 'string
        (link-start (page-node-link ix-pageno ix-tag) t)
        (verbatim ix-pageno)
        (cond ((gethash ix-pageno *index-pageno-mention-table*)
               (concatenate 'string
                 ":"
                 (number-to-roman
                   (incf (gethash ix-pageno *index-pageno-mention-table*))
                   :downcasep t)
                 ))
              (t
                (setf (gethash ix-pageno *index-pageno-mention-table*)
                      1)
                ""))
        (link-stop)))))
.##
